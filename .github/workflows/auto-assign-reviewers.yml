name: Auto Comment and Mention Reviewers Based on Labels

on:
  pull_request:
    types:
      - labeled
      - synchronize
      - opened

jobs:
  auto-comment:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Get PR labels
        id: pr_labels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 获取 PR 标签并确保正确格式
          LABELS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels | jq -r '.[].name' | tr '\n' ' ')
          echo "Labels: $LABELS"
          echo "LABELS=$LABELS" >> $GITHUB_ENV

      - name: Prepare reviewer mappings
        id: reviewer-mappings
        run: |
          # 定义标签和审核者的映射
          LABELS_TO_REVIEWERS='{
            "frontend": "@kurisaW, @Nedki-L, @KurisaW-Collaborative",
            "backend": "@kurisaW, @Nedki-L",
            "design": "@kurisaW",
            "action": "@kurisaW, @PeterJhon"
          }'

          # 获取PR标签并确定需要的审核者
          REQUIRED_REVIEWERS=""
          for label in $(echo "${{ env.LABELS }}" | tr " " "\n"); do
            REVIEWERS=$(echo $LABELS_TO_REVIEWERS | jq -r --arg label "$label" '.[$label] // empty')
            REQUIRED_REVIEWERS="${REQUIRED_REVIEWERS} ${REVIEWERS}"
          done

          # 格式化审核者列表，去除多余的空格和换行，并删除不必要的字符
          # 去重并去掉多余的空格和逗号
          REVIEWERS_LIST=$(echo "$REQUIRED_REVIEWERS" | tr -s '[:space:]' ' ' | sed 's/^ //;s/ $//' | tr ',' '\n' | sort -u | tr '\n' ',' | sed 's/,$//')
          # 最后去除额外的空格或逗号
          REVIEWERS_LIST=$(echo "$REVIEWERS_LIST" | tr -s ' ' | sed 's/,$//')
          echo "REVIEWERS_LIST=$REVIEWERS_LIST" >> $GITHUB_ENV

      - name: Add comment and mention reviewers
        run: |
          REVIEWERS="${{ env.REVIEWERS_LIST }}"
          if [ -z "$REVIEWERS" ]; then
            echo "No reviewers to mention."
          else
            # 构建评论内容
            COMMENT_BODY=$(jq -n --arg reviewers "$REVIEWERS" --arg labels "${{ env.LABELS }}" \
              '{"body": "Hey \($reviewers), could you please review this PR? 😊\n\nThe following labels were applied:\n- \($labels)\n\nPlease check the changes carefully, and let us know if you need any further details. Thank you for your time!"}')
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d "$COMMENT_BODY" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments
          fi
